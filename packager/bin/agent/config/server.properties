#server configuration

#batch job's available running count [threshold] in one server
batch.running.job.max.count=100
#batch job's available running count, before n days
batch.running.job.max.before=3
#check interval(seconds) for changing a job status from 'WAITING' to 'READY'
ready.check.interval.seconds=10

#batch job's timeout
batch.job.queueingtime=10
batch.job.blockingTimeout=10

#jgroups channel group name
batch.agent.channel.group.name=batch_cluster
#validation sql
batch.agent.database.validationSql = select * from dual

#check metadata SQL
batch.check.meta=true
batch.agent.database.checkweirdjobSql = SELECT DISTINCT A.JOB_SEQ, A.JOB_ID, A.CREATE_TIME, A.LAST_UPDATED, A.STATUS FROM JOB_EXEC_HISTORY A WHERE A.STATUS not in  ('COMPLETED','FAILED','STOPPED' )
batch.agent.database.clearweirdjobSql = UPDATE JOB_EXEC_HISTORY SET STATUS='FAILED' WHERE STATUS not in ('COMPLETED','FAILED','STOPPED' )
batch.agent.database.clearweirdstepSql = UPDATE STEP_EXEC_HISTORY SET STATUS='FAILED' WHERE STATUS not in ('COMPLETED','FAILED','STOPPED' )
batch.agent.database.clearweirdresourceSql = UPDATE RESOURCE_MANAGEMENT SET STATUS='RELEASED' WHERE STATUS = 'LOCKED'
